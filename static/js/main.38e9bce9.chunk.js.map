{"version":3,"sources":["Header.js","MemeGenerator.js","App.js","index.js"],"names":["Header","src","alt","style","height","MemeGenerator","state","topText","bottomText","randomImg","allMemeImgs","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","randNum","Math","floor","random","length","allRanMeme","url","fetch","then","response","json","memes","data","className","onSubmit","this","type","onChange","placeholder","width","Component","App","ReactDOM","render","document","getElementById"],"mappings":"wNAWeA,MATf,WACI,OACI,mCACE,qBAAKC,IAAI,iEAAiEC,IAAI,MAAMC,MAAO,CAACC,OAAO,OACnG,6BAAI,qD,OCqECC,G,kNAtEXC,MAAQ,CACJC,QAAS,GACTC,WAAY,GACZC,UAAW,gCACXC,YAAa,I,EAWjBC,aAAa,SAACC,GACV,MAAsBA,EAAMC,OAArBC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MACb,EAAKC,SAAL,eAAgBF,EAAMC,K,EAG1BE,aAAc,SAACL,GACXA,EAAMM,iBACN,IAAMC,EAAUC,KAAKC,MAAMD,KAAKE,SAAW,EAAKhB,MAAMI,YAAYa,QAC5DC,EAAa,EAAKlB,MAAMI,YAAYS,GAASM,IACnD,EAAKT,SAAS,CAACP,UAAUe,IACzB,EAAKlB,MAAMC,QAAU,GACrB,EAAKD,MAAME,WAAa,I,uDApB5B,WAAqB,IAAD,OAChBkB,MAAM,qCACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACF,IAAQE,EAAUF,EAASG,KAAnBD,MACR,EAAKd,SAAS,CAAEN,YAAaoB,S,oBAkBzC,WACI,OACI,qBAAKE,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,WAAf,UACI,uBAAMA,UAAU,cAAcC,SAAUC,KAAKjB,aAA7C,UAEI,qBAAKe,UAAU,aAAf,SACI,uBACIA,UAAU,qCACVG,KAAK,OACLrB,KAAK,UACLC,MAAOmB,KAAK5B,MAAMC,QAClB6B,SAAUF,KAAKvB,aACf0B,YAAY,eAGpB,qBAAKL,UAAU,aAAf,SACI,uBACIA,UAAU,qCACVG,KAAK,OACLrB,KAAK,aACLC,MAAOmB,KAAK5B,MAAME,WAClB4B,SAAUF,KAAKvB,aACf0B,YAAY,kBAGpB,wBAAQL,UAAU,kBAAlB,oBAEJ,sBAAKA,UAAU,GAAf,UACI,qBAAK/B,IAAKiC,KAAK5B,MAAMG,UAAWN,MAAO,CAACmC,MAAM,QAAQlC,OAAO,SAAUF,IAAI,KAC3E,qBAAI8B,UAAU,UAAd,cAA0BE,KAAK5B,MAAMC,WACrC,oBAAIyB,UAAU,aAAd,SAA4BE,KAAK5B,MAAME,2B,GA/DvC+B,cCkBbC,G,kKAfb,WACE,OACE,gCAEG,cAAC,EAAD,IACA,cAAC,EAAD,W,GANSD,cCClBE,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.38e9bce9.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header(){\n    return(\n        <header >\n          <img src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\" alt=\"pix\" style={{height:130}}/>\n          <h3><p>Meme Generator</p></h3>\n        </header>\n    )\n}\n\nexport default Header","import React, { Component } from 'react';\nimport './Bootstrap/bootstrap/css/bootstrap.min.css'\n\nclass MemeGenerator extends Component {\n    //using this instead of constructor\n    state = {\n        topText: \"\",\n        bottomText: \"\",\n        randomImg: \"http://i.imgflip.com/1bij.jpg\",\n        allMemeImgs: []\n    }\n    componentDidMount() {\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(response => response.json())\n            .then(response => {\n                const { memes } = response.data\n                this.setState({ allMemeImgs: memes })\n            })\n    }\n    //arrow function ...so need to bind it to the class\n    handleChange=(event)=>{\n        const {name, value} = event.target\n        this.setState({[name]:value})\n    }\n\n    handleSubmit =(event)=>{\n        event.preventDefault()\n        const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\n        const allRanMeme = this.state.allMemeImgs[randNum].url\n        this.setState({randomImg:allRanMeme})\n        this.state.topText = ''\n        this.state.bottomText = ''\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <form className=\"form-inline\" onSubmit={this.handleSubmit}>\n                         \n                            <div className=\"form-group\">\n                                <input\n                                    className=\"form-control border border-primary\"\n                                    type=\"text\"\n                                    name=\"topText\"\n                                    value={this.state.topText}\n                                    onChange={this.handleChange}\n                                    placeholder=\"Top Text\"\n                                />\n                                </div>\n                            <div className=\"form-group\">\n                                <input\n                                    className=\"form-control border border-primary\"\n                                    type=\"text\"\n                                    name=\"bottomText\"\n                                    value={this.state.bottomText}\n                                    onChange={this.handleChange}\n                                    placeholder=\"Bottom Text\"\n                                />\n                                </div>\n                            <button className=\"btn btn-success\">Gen</button>\n                        </form>\n                        <div className=\"\">\n                            <img src={this.state.randomImg} style={{width:'550px',height:'500px',}}alt=\"\"/>\n                            <h1 className=\"top-txt\"> {this.state.topText}</h1>\n                            <h1 className=\"bottom-txt\">{this.state.bottomText}</h1>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MemeGenerator","import React, { Component } from 'react';\nimport Header from './Header'\nimport MemeGenerator from './MemeGenerator'\nimport './App.css'\n\nclass App extends Component{\n  render(){\n    return (\n      <div>\n         \n         <Header/>\n         <MemeGenerator/>\n      </div>\n     \n      \n    );\n  }\n   \n  }\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\n// const myfirstelement = <h1>Hello React!2</h1>\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}